openapi: 3.0.0
info:
  title: PYQ Learning Gap Chat API
  version: 1.0.0
  description: API for user registration, OTP login using Twilio, and college data

servers:
  - url: https://pyq-learninng-gap-chat-production.up.railway.app
    description: Production server

tags:
  - name: Auth
    description: Twilio OTP Authentication
  - name: Users
    description: User registration and profile
  - name: Colleges
    description: List of medical colleges

paths:
  /auth/otp/start:
    post:
      tags: [Auth]
      summary: Send OTP via Twilio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [phone]
              properties:
                phone:
                  type: string
                  example: "9876543210"
      responses:
        '200':
          description: OTP sent successfully
        '400':
          description: Phone number missing or invalid
        '500':
          description: Failed to send OTP

  /auth/otp/verify:
    post:
      tags: [Auth]
      summary: Verify OTP via Twilio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [phone, otp]
              properties:
                phone:
                  type: string
                  example: "9876543210"
                otp:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: OTP verified successfully
        '401':
          description: Invalid OTP
        '500':
          description: Verification failed

  /users/register:
    post:
      tags: [Users]
      summary: Register a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User registered successfully
        '409':
          description: User already registered
        '400':
          description: Missing required fields
        '500':
          description: Registration failed

  /users/{id}:
    get:
      tags: [Users]
      summary: Get user profile by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique user ID (UUID)
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Server error

  /users/phone/{phone}:
    get:
      tags: [Users]
      summary: Get full user profile by phone number
      parameters:
        - in: path
          name: phone
          required: true
          schema:
            type: string
            example: "9876543210"
          description: 10-digit phone number without country code
      responses:
        '200':
          description: Full user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

  /users/status/{phone}:
    get:
      tags: [Users]
      summary: Check user activation status by phone number
      parameters:
        - in: path
          name: phone
          required: true
          schema:
            type: string
            example: "9876543210"
          description: 10-digit phone number without country code
      responses:
        '200':
          description: Activation status
          content:
            application/json:
              schema:
                type: object
                properties:
                  phone:
                    type: string
                  is_active:
                    type: boolean
        '404':
          description: User not found

  /users/phone/{phone}/toggle-activation:
    patch:
      tags: [Users]
      summary: Toggle user activation status by phone number
      parameters:
        - in: path
          name: phone
          required: true
          schema:
            type: string
            example: "9876543210"
          description: 10-digit phone number without country code
      responses:
        '200':
          description: Activation status updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  phone:
                    type: string
                  is_active:
                    type: boolean
        '404':
          description: User not found
        '500':
          description: Failed to update user status

  /colleges:
    get:
      tags: [Colleges]
      summary: Get all medical colleges
      responses:
        '200':
          description: List of medical colleges
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/College'
        '500':
          description: Failed to fetch colleges

  /colleges:
    post:
      tags: [Colleges]
      summary: Add a new medical college
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/College'
      responses:
        '201':
          description: College added successfully
        '400':
          description: Invalid input
        '500':
          description: Error while adding college

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        phone:
          type: string
        email:
          type: string
        is_active:
          type: boolean
        country_code:
          type: string
        photograph_url:
          type: string
        medical_college_id:
          type: string
        year_of_joining:
          type: integer

    UserInput:
      type: object
      required:
        - country_code
        - phone
        - email
        - name
      properties:
        country_code:
          type: string
          example: "+91"
        phone:
          type: string
          example: "9876543210"
        email:
          type: string
          example: "student@example.com"
        name:
          type: string
          example: "John Doe"
        photograph_url:
          type: string
          example: "https://example.com/photo.jpg"
        medical_college_id:
          type: string
        year_of_joining:
          type: integer

    College:
      type: object
      required:
        - name
        - city
        - state
        - ownership
      properties:
        id:
          type: string
        name:
          type: string
        city:
          type: string
        state:
          type: string
        ownership:
          type: string
          enum: [Government, Private]
